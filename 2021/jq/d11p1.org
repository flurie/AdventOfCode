#+TITLE: Day 11, Part 1
:PROPERTIES:
:URL: https://adventofcode.com/2021/day/11
:END:
* [[https://adventofcode.com/2021/day/11][Day 11 - Advent of Code 2021]] :website:

[2021-12-14 Tue 20:09]

** Article

*** --- Day 11: Dumbo Octopus ---

You enter a large cavern full of rare bio-luminescent [[https://www.youtube.com/watch?v=eih-VSaS2g0][dumbo octopuses]]! They seem to not like the Christmas lights on your submarine, so you turn them off for now.

There are 100 octopuses arranged neatly in a 10 by 10 grid. Each octopus slowly gains /energy/ over time and /flashes/ brightly for a moment when its energy is full. Although your lights are off, maybe you could navigate through the cave without disturbing the octopuses if you could predict when the flashes of light will happen.

Each octopus has an /energy level/ - your submarine can remotely measure the energy level of each octopus (your puzzle input). For example:

#+begin_src text :tangle d11test.txt
5483143223
2745854711
5264556173
6141336146
6357385478
4167524645
2176841721
6882881134
4846848554
5283751526
#+end_src

The energy level of each octopus is a value between =0= and =9=. Here, the top-left octopus has an energy level of =5=, the bottom-right one has an energy level of =6=, and so on.

You can model the energy levels and flashes of light in /steps/. During a single step, the following occurs:

- First, the energy level of each octopus increases by =1=.
#+begin_src jq :cmd-line -nRc :in-file d11test.txt

[inputs/"" | map(tonumber) | map(.+1) | map(.+1) | indices(10)] | [to_entries[] | [[.key], .value] | select(last | length > 0) | combinations]
#+end_src

Gets us coords of flashers in a nice format!

#+begin_example
[[0,2],[1,4],[4,5],[4,9],[6,4],[7,1],[7,2],[7,4],[7,5],[8,1],[8,4],[8,6],[9,2]]
#+end_example

#+begin_src jq :cmd-line -nRc :in-file d11test.txt
[inputs/"" | map(tonumber) | map(.+1) | map(.+1)] | . as $map
| map(map(. >= 10) | indices(true))
| [to_entries[] | [[.key], .value] | select(last | length > 0) | combinations] | . as $lit | [.[] | first += 1, first -= 1, last += 1, last -= 1
      | select(all(. >= 0)) | select($map[first][last])] | reduce .[] as [$x, $y] ($map; (.[$x][$y] += 1)) | map(map(. >= 10) | indices(true)) | [to_entries[] | [[.key], .value] | select(last | length > 0) | combinations] - $lit

#+end_src

#+RESULTS:
: [[4,8],[6,2],[9,4]]

#+begin_src jq :cmd-line -nR
1 | nth(10; recurse(.*2))
#+end_src

#+RESULTS:
: 1024

#+begin_src jq :cmd-line -nRc :in-file d11test.txt
[inputs/"" | map(tonumber)]
  | length as $ylen | (first | length) as $xlen | {grid: .}
  |
                                                     [limit(101; recurse(
                .grid[][] += 1 | .flashes = [] | .next = [[]]
                 | until( .next | length == 0;
                      .next = ([.grid | paths(numbers > 9)] - .flashes)
                      | [.next[]
                          | [[range(3) - 1 + first], [range(3) - 1 + last]] | combinations
                          | select(all(. >= 0) and first < $ylen and last < $xlen)] as $inc
                       | .grid = reduce $inc[] as [$y, $x] (.grid; .[$y][$x] += 1)
|                          .flashes += .next )
                | .grid = reduce .flashes[] as [$y, $x] (.grid; .[$y][$x] = 0)
              )) | .flashes//[] | length] | add
#+end_src

#+RESULTS:
: 1656

#+begin_src jq :cmd-line -nRc :in-file d11test.txt
[inputs/"" | map(tonumber)] | {map: .} | .map[][] += 2 | .map | paths(numbers > 9)

#+end_src

#+RESULTS:
#+begin_example
[0,2]
[1,4]
[4,5]
[4,9]
[6,4]
[7,1]
[7,2]
[7,4]
[7,5]
[8,1]
[8,4]
[8,6]
[9,2]
#+end_example

#+begin_src jq :cmd-line -nRc :in-file d11test.txt
[[2, 4], [3, 5]] | [.[] | [[range(3) - 1 + first], [range(3) - 1 + last]] | combinations]

#+end_src

#+RESULTS:
: [[1,3],[1,4],[1,5],[2,3],[2,4],[2,5],[3,3],[3,4],[3,5],[2,4],[2,5],[2,6],[3,4],[3,5],[3,6],[4,4],[4,5],[4,6]]


- Then, any octopus with an energy level greater than =9= /flashes/. This increases the energy level of all adjacent octopuses by =1=, including octopuses that are diagonally adjacent. If this causes an octopus to have an energy level greater than =9=, it /also flashes/. This process continues as long as new octopuses keep having their energy level increased beyond =9=. (An octopus can only flash /at most once per step/.)
- Finally, any octopus that flashed during this step has its energy level set to =0=, as it used all of its energy to flash.

Adjacent flashes can cause an octopus to flash on a step even if it begins that step with very little energy. Consider the middle octopus with =1= energy in this situation:

#+begin_example
   Before any steps:
  11111
  19991
  19191
  19991
  11111

  After step 1:
  34543
  40004
  50005
  40004
  34543

  After step 2:
  45654
  51115
  61116
  51115
  45654
#+end_example

An octopus is /highlighted/ when it flashed during the given step.

Here is how the larger example above progresses:

#+begin_example
   Before any steps:
  5483143223
  2745854711
  5264556173
  6141336146
  6357385478
  4167524645
  2176841721
  6882881134
  4846848554
  5283751526

  After step 1:
  6594254334
  3856965822
  6375667284
  7252447257
  7468496589
  5278635756
  3287952832
  7993992245
  5957959665
  6394862637

  After step 2:
  88 07476555
  5 089 087 054
  85978896 08
  84857696 00
  87 009 088 00
  66 00088989
  68 00005943
   0000007456
  9 000000876
  87 00006848

  After step 3:
   005 09 00866
  85 008 00575
  99 00000039
  97 00000041
  9935 08 0063
  77123 00000
  791125 0009
  221113 0000
   0421125 000
   0021119 000

  After step 4:
  2263 031977
   0923 031697
   003222115 0
   0041111163
   0076191174
   0053411122
   004236112 0
  5532241122
  1532247211
  113223 0211

  After step 5:
  4484144 000
  2 044144 000
  2253333493
  1152333274
  11873 03285
  1164633233
  1153472231
  6643352233
  2643358322
  2243341322

  After step 6:
  5595255111
  3155255222
  33644446 05
  2263444496
  2298414396
  2275744344
  2264583342
  7754463344
  3754469433
  3354452433

  After step 7:
  67 07366222
  4377366333
  4475555827
  34966557 09
  35 006256 09
  35 09955566
  3486694453
  8865585555
  486558 0644
  4465574644

  After step 8:
  7818477333
  5488477444
  5697666949
  46 0876683 0
  473494673 0
  474 0097688
  69 00007564
   0000009666
  8 000004755
  68 00007755

  After step 9:
  9 06 0000644
  78 00000976
  69 0000008 0
  584 0000082
  5858 000093
  69624 00000
  8 02125 0009
  222113 0009
  9111128 097
  7911119976

  After step 10:
   0481112976
   0031112 009
   00411125 04
   00811114 06
   00991113 06
   0093511233
   044236113 0
  553225235 0
   053225 06 00
   003224 0000
#+end_example

After step 10, there have been a total of =204= flashes. Fast forwarding, here is the same configuration every 10 steps:

#+begin_example
   After step 20:
  3936556452
  56865568 06
  449655569 0
  444865558 0
  445686557 0
  568 0086577
  7 000009896
   0000000344
  6 000000364
  46 00009543

  After step 30:
   0643334118
  4253334611
  3374333458
  2225333337
  2229333338
  2276733333
  2754574565
  5544458511
  9444447111
  7944446119

  After step 40:
  6211111981
   0421111119
   0042111115
   0003111115
   0003111116
   0065611111
   0532351111
  3322234597
  2222222976
  2222222762

  After step 50:
  9655556447
  48655568 05
  448655569 0
  445865558 0
  457486557 0
  57 00086566
  6 000009887
  8 000000533
  68 00000633
  568 0000538

  After step 60:
  25333342 00
  274333464 0
  2264333458
  2225333337
  2225333338
  2287833333
  3854573455
  1854458611
  1175447111
  1115446111

  After step 70:
  8211111164
   0421111166
   0042111114
   0004211115
   0000211116
   0065611111
   0532351111
  7322235117
  5722223475
  4572222754

  After step 80:
  1755555697
  59655556 09
  448655568 0
  445865558 0
  457 086557 0
  57 00086566
  7 000008666
   000000099 0
   00000008 00
   0000000000

  After step 90:
  7433333522
  2643333522
  2264333458
  2226433337
  2222433338
  2287833333
  2854573333
  4854458333
  3387779333
  3333333333

  After step 100:
   0397666866
   0749766918
   0053976933
   0004297822
   0004229892
   0053222877
   0532222966
  9322228966
  7922286866
  6789998766
#+end_example

After 100 steps, there have been a total of = 1656= flashes.

Given the starting energy levels of the dumbo octopuses in your cavern, simulate 100 steps. /How many total flashes are there after 100 steps?/

#+begin_src jq :cmd-line -nRc :in-file d11input.txt
[inputs/"" | map(tonumber)]
  | length as $ylen | (first | length) as $xlen | {grid: .}
  |
                                                     [limit(101; recurse(
                .grid[][] += 1 | .flashes = [] | .next = [[]]
                 | until( .next | length == 0;
                      .next = ([.grid | paths(numbers > 9)] - .flashes)
                      | [.next[]
                          | [[range(3) - 1 + first], [range(3) - 1 + last]] | combinations
                          | select(all(. >= 0) and first < $ylen and last < $xlen)] as $inc
                       | .grid = reduce $inc[] as [$y, $x] (.grid; .[$y][$x] += 1)
|                          .flashes += .next )
                | .grid = reduce .flashes[] as [$y, $x] (.grid; .[$y][$x] = 0)
              )) | .flashes//[] | length] | add
#+end_src

#+RESULTS:
: 1599
